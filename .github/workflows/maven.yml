# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build with Maven
        run: ls $GITHUB_WORKSPACE

      - uses: liatrio/run-gatling@v1.2.0
        with:
          # Java Version to use
          # Default: '17'
          javaVersion: '11'

          # Java Distribution to use
          # Default: 'microsoft'
          javaDistribution: 'temurin'

          # Path to the Gatling Test Suite's pom.xml file
          # Default: './test'
          pomPath: '.'

          # Class of the simulation to run ('myPackage.MySimulationClass')
          # Default: ''
          # (Optionnal)
          # Note: If the Test Suite contains more than one simulation,
          #       you may want to configure the Maven plugin to run
          #       multiple simulations. Otherwise, you will have to fill this
          #       parameter with the specific simulation to execute.
          simulationClass: 'org.example.scenarios.MyTestJavaGatling'

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
